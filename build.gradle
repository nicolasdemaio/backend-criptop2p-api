plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
	id 'jacoco'
	id 'org.sonarqube' version '3.4.0.2513'
}

group = 'ar.edu.unq.desapp.grupof'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	//jcenter()
}

configurations.all {
	exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
	implementation "io.springfox:springfox-boot-starter:3.0.0"
    implementation "io.springfox:springfox-swagger-ui:3.0.0"
	// https://mavenlibs.com/maven/dependency/org.modelmapper/modelmapper
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.4.0'
	// https://mvnrepository.com/artifact/org.ehcache/ehcache
	implementation group: 'org.ehcache', name: 'ehcache', version: '3.10.2'
	testImplementation 'com.tngtech.archunit:archunit:1.0.0'
	testImplementation 'com.tngtech.archunit:archunit-junit5:1.0.0'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
}

jacocoTestReport {
	reports {
		xml.enabled true
	}
}

test.finalizedBy jacocoTestReport

tasks.named('test') {
	useJUnitPlatform()
}

sonarqube {
	var exclusions = List.of(
			"**/config/*",
			"**/exceptions/*",
			"**/utils/*",
			"**/dto/*"
	)

	properties {
		property "sonar.projectKey", "nicolasdemaio_backend-criptop2p-api"
		property "sonar.organization", "nicolasdemaio"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.exclusions", exclusions

	}
}

tasks.named('sonarqube').configure {
	dependsOn test
}